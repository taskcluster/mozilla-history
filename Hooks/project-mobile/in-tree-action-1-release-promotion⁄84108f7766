{
  "hookGroupId": "project-mobile",
  "hookId": "in-tree-action-1-release-promotion/84108f7766",
  "metadata": {
    "description": "",
    "name": "project-mobile/in-tree-action-1-release-promotion/84108f7766",
    "owner": "jlorenzo+tc@mozilla.com"
  },
  "schedule": [],
  "task": {
    "$let": {
      "action": {
        "cb_name": "release-promotion",
        "description": "${payload.decision.action.description}",
        "name": "${payload.decision.action.name}",
        "repo_scope": "assume:repo:${payload.decision.repository.url[8:]}:action:release-promotion",
        "symbol": "${payload.decision.action.symbol}",
        "taskGroupId": "${payload.decision.action.taskGroupId}",
        "title": "${payload.decision.action.title}"
      },
      "input": {
        "$eval": "payload.user.input"
      },
      "ownTaskId": {
        "$eval": "payload.user.taskId"
      },
      "parameters": {
        "$eval": "payload.decision['parameters']"
      },
      "push": {
        "$eval": "payload.decision.push"
      },
      "repository": {
        "$eval": "payload.decision.repository"
      },
      "taskGroupId": {
        "$eval": "payload.user.taskGroupId"
      },
      "taskId": {
        "$eval": "payload.user.taskId"
      },
      "tasks_for": "action"
    },
    "in": {
      "$let": {
        "taskgraph": {
          "branch": "taskgraph-try",
          "revision": "dd9b80f2e851182431e2baa3ff57349ddcfab830"
        },
        "trustDomain": "mobile"
      },
      "in": {
        "$let": {
          "baseRepoUrl": {
            "$if": "tasks_for in [\"github-push\", \"github-release\"]",
            "else": {
              "$if": "tasks_for == \"github-pull-request\"",
              "else": {
                "$if": "tasks_for in [\"cron\", \"action\"]",
                "then": "${repository.url}"
              },
              "then": "${event.pull_request.base.repo.html_url}"
            },
            "then": "${event.repository.html_url}"
          },
          "head_branch": {
            "$if": "tasks_for == \"github-pull-request\"",
            "else": {
              "$if": "tasks_for == \"github-push\"",
              "else": {
                "$if": "tasks_for == \"github-release\"",
                "else": {
                  "$if": "tasks_for in [\"cron\", \"action\"]",
                  "then": "${push.branch}"
                },
                "then": "${event.release.target_commitish}"
              },
              "then": "${event.ref}"
            },
            "then": "${event.pull_request.head.ref}"
          },
          "head_sha": {
            "$if": "tasks_for == \"github-push\"",
            "else": {
              "$if": "tasks_for == \"github-pull-request\"",
              "else": {
                "$if": "tasks_for == \"github-release\"",
                "else": {
                  "$if": "tasks_for in [\"cron\", \"action\"]",
                  "then": "${push.revision}"
                },
                "then": "${event.release.tag_name}"
              },
              "then": "${event.pull_request.head.sha}"
            },
            "then": "${event.after}"
          },
          "ownTaskId": {
            "$if": "\"github\" in tasks_for",
            "else": {
              "$if": "tasks_for in [\"cron\", \"action\"]",
              "then": "${ownTaskId}"
            },
            "then": {
              "$eval": "as_slugid(\"decision_task\")"
            }
          },
          "ownerEmail": {
            "$if": "tasks_for in [\"cron\", \"action\"]",
            "else": {
              "$if": "event.sender.login == \"bors[bot]\"",
              "else": {
                "$if": "tasks_for == \"github-push\"",
                "else": {
                  "$if": "tasks_for == \"github-pull-request\"",
                  "else": {
                    "$if": "tasks_for == \"github-release\"",
                    "then": "${event.sender.login}@users.noreply.github.com"
                  },
                  "then": "${event.pull_request.user.login}@users.noreply.github.com"
                },
                "then": "${event.pusher.email}"
              },
              "then": "skaspari+mozlando@mozilla.com"
            },
            "then": "${tasks_for}@noreply.mozilla.org"
          },
          "project": {
            "$if": "tasks_for in [\"github-push\", \"github-release\"]",
            "else": {
              "$if": "tasks_for == \"github-pull-request\"",
              "else": {
                "$if": "tasks_for in [\"cron\", \"action\"]",
                "then": "${repository.project}"
              },
              "then": "${event.pull_request.head.repo.name}"
            },
            "then": "${event.repository.name}"
          },
          "releaseAction": {
            "$if": "tasks_for == \"github-release\"",
            "else": "UNDEFINED",
            "then": "${event.action}"
          },
          "repoUrl": {
            "$if": "tasks_for in [\"github-push\", \"github-release\"]",
            "else": {
              "$if": "tasks_for == \"github-pull-request\"",
              "else": {
                "$if": "tasks_for in [\"cron\", \"action\"]",
                "then": "${repository.url}"
              },
              "then": "${event.pull_request.head.repo.html_url}"
            },
            "then": "${event.repository.html_url}"
          }
        },
        "in": {
          "$if": "tasks_for in [\"github-pull-request\", \"action\", \"cron\"] || (tasks_for == \"github-push\" \u0026\u0026 head_branch[:10] != \"refs/tags/\") \u0026\u0026 (head_branch != \"staging.tmp\") \u0026\u0026 (head_branch != \"trying.tmp\") || (tasks_for == \"github-release\" \u0026\u0026 releaseAction == \"published\")",
          "then": {
            "$let": {
              "level": {
                "$if": "tasks_for in [\"github-push\", \"github-release\", \"action\", \"cron\"] \u0026\u0026 repoUrl == \"https://github.com/mozilla-mobile/fenix\"",
                "else": "1",
                "then": "3"
              },
              "short_head_branch": {
                "$if": "head_branch[:11] == \"refs/heads/\"",
                "else": "${head_branch}",
                "then": {
                  "$eval": "head_branch[11:]"
                }
              }
            },
            "in": {
              "created": {
                "$fromNow": ""
              },
              "deadline": {
                "$fromNow": "1 day"
              },
              "expires": {
                "$fromNow": "1 year 1 second"
              },
              "extra": {
                "$merge": [
                  {
                    "treeherder": {
                      "$merge": [
                        {
                          "machine": {
                            "platform": "gecko-decision"
                          }
                        },
                        {
                          "$if": "tasks_for in [\"github-push\", \"github-pull-request\"]",
                          "else": {
                            "$if": "tasks_for == \"github-release\"",
                            "else": {
                              "$if": "tasks_for == \"action\"",
                              "else": {
                                "groupSymbol": "cron",
                                "symbol": "${cron.job_symbol}"
                              },
                              "then": {
                                "groupName": "action-callback",
                                "groupSymbol": "AC",
                                "symbol": "${action.symbol}"
                              }
                            },
                            "then": {
                              "symbol": "ship_fenix"
                            }
                          },
                          "then": {
                            "symbol": "D"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "$if": "tasks_for == \"action\"",
                    "then": {
                      "action": {
                        "context": {
                          "input": {
                            "$eval": "input"
                          },
                          "taskGroupId": "${action.taskGroupId}",
                          "taskId": {
                            "$eval": "taskId"
                          }
                        },
                        "name": "${action.name}"
                      },
                      "parent": "${action.taskGroupId}"
                    }
                  },
                  {
                    "$if": "tasks_for == \"cron\"",
                    "then": {
                      "cron": {
                        "$json": {
                          "$eval": "cron"
                        }
                      }
                    }
                  },
                  {
                    "tasks_for": "${tasks_for}"
                  }
                ]
              },
              "metadata": {
                "$merge": [
                  {
                    "owner": "${ownerEmail}",
                    "source": "${repoUrl}/raw/${head_sha}/.taskcluster.yml"
                  },
                  {
                    "$if": "tasks_for in [\"github-push\", \"github-pull-request\", \"github-release\"]",
                    "else": {
                      "$if": "tasks_for == \"action\"",
                      "else": {
                        "description": "Created by a [cron task](https://firefox-ci-tc.services.mozilla.com/tasks/${cron.task_id})",
                        "name": "Decision Task for cron job ${cron.job_name}"
                      },
                      "then": {
                        "description": "${action.description}",
                        "name": "Action: ${action.title}"
                      }
                    },
                    "then": {
                      "description": "The task that creates all of the other tasks in the task graph",
                      "name": "Decision Task"
                    }
                  }
                ]
              },
              "payload": {
                "artifacts": {
                  "public": {
                    "expires": {
                      "$fromNow": "1 year"
                    },
                    "path": "/builds/worker/artifacts",
                    "type": "directory"
                  }
                },
                "command": [
                  "/usr/local/bin/run-task",
                  "--mobile-checkout=/builds/worker/checkouts/src",
                  "--taskgraph-checkout=/builds/worker/checkouts/taskgraph",
                  "--task-cwd=/builds/worker/checkouts/src",
                  "--",
                  "bash",
                  "-cx",
                  {
                    "$let": {
                      "extraArgs": {
                        "$if": "tasks_for == \"cron\"",
                        "else": "",
                        "then": "${cron.quoted_args}"
                      }
                    },
                    "in": {
                      "$if": "tasks_for == \"action\"",
                      "else": "PIP_IGNORE_INSTALLED=0 pip install --user /builds/worker/checkouts/taskgraph \u0026\u0026 PIP_IGNORE_INSTALLED=0 pip install --user arrow taskcluster pyyaml \u0026\u0026 taskcluster/scripts/install-sdk.sh \u0026\u0026 ln -s /builds/worker/artifacts artifacts \u0026\u0026 ~/.local/bin/taskgraph decision --pushlog-id='0' --pushdate='0' --project='${project}' --message=\"\" --owner='${ownerEmail}' --level='${level}' --base-repository=\"$MOBILE_BASE_REPOSITORY\" --head-repository=\"$MOBILE_HEAD_REPOSITORY\" --head-ref=\"$MOBILE_HEAD_REF\" --head-rev=\"$MOBILE_HEAD_REV\" --repository-type=\"$MOBILE_REPOSITORY_TYPE\" --tasks-for='${tasks_for}' ${extraArgs}\n",
                      "then": "PIP_IGNORE_INSTALLED=0 pip install --user /builds/worker/checkouts/taskgraph \u0026\u0026 taskcluster/scripts/install-sdk.sh \u0026\u0026 ln -s /builds/worker/artifacts artifacts \u0026\u0026 ~/.local/bin/taskgraph action-callback\n"
                    }
                  }
                ],
                "env": {
                  "$merge": [
                    {
                      "ANDROID_SDK_ROOT": "/builds/worker/android-sdk",
                      "HG_STORE_PATH": "/builds/worker/checkouts/hg-store",
                      "MOBILE_BASE_REPOSITORY": "${baseRepoUrl}",
                      "MOBILE_HEAD_REF": "${head_branch}",
                      "MOBILE_HEAD_REPOSITORY": "${repoUrl}",
                      "MOBILE_HEAD_REV": "${head_sha}",
                      "MOBILE_REPOSITORY_TYPE": "git",
                      "REPOSITORIES": {
                        "$json": {
                          "mobile": "Fenix",
                          "taskgraph": "Taskgraph"
                        }
                      },
                      "TASKGRAPH_BASE_REPOSITORY": "https://hg.mozilla.org/ci/taskgraph",
                      "TASKGRAPH_HEAD_REPOSITORY": "https://hg.mozilla.org/ci/${taskgraph.branch}",
                      "TASKGRAPH_HEAD_REV": "${taskgraph.revision}",
                      "TASKGRAPH_REPOSITORY_TYPE": "hg"
                    },
                    {
                      "$if": "tasks_for in [\"github-pull-request\"]",
                      "then": {
                        "MOBILE_PULL_REQUEST_NUMBER": "${event.pull_request.number}"
                      }
                    },
                    {
                      "$if": "tasks_for == \"action\"",
                      "then": {
                        "ACTION_CALLBACK": "${action.cb_name}",
                        "ACTION_INPUT": {
                          "$json": {
                            "$eval": "input"
                          }
                        },
                        "ACTION_TASK_GROUP_ID": "${action.taskGroupId}",
                        "ACTION_TASK_ID": {
                          "$json": {
                            "$eval": "taskId"
                          }
                        }
                      }
                    },
                    {
                      "$if": "tasks_for == \"github-release\"",
                      "then": {
                        "MOBILE_HEAD_TAG": "${event.release.tag_name}"
                      }
                    }
                  ]
                },
                "features": {
                  "chainOfTrust": true,
                  "taskclusterProxy": true
                },
                "image": "mozillareleases/taskgraph:decision-mobile-6020473b1a928d8df50e234a7ca2e81ade2220a4fb5fbe16b02477dd64a49728@sha256:98d226736b7d03907114bf37938002b90e8a37cbe3a297690e349f1ddddb1d7c",
                "maxRunTime": 1800
              },
              "priority": "lowest",
              "provisionerId": "mobile-${level}",
              "requires": "all-completed",
              "retries": 5,
              "routes": {
                "$flatten": [
                  "checks",
                  "index.garbage.project.mobile.${project}.v2.${short_head_branch}.revision.${head_sha}.taskgraph.decision",
                  {
                    "$if": "level == \"3\"",
                    "else": [],
                    "then": [
                      "tc-treeherder.v2.${project}.${head_sha}"
                    ]
                  }
                ]
              },
              "schedulerId": "${trustDomain}-level-${level}",
              "scopes": {
                "$if": "tasks_for == \"github-push\"",
                "else": {
                  "$if": "tasks_for == \"github-pull-request\"",
                  "else": {
                    "$if": "tasks_for == \"github-release\"",
                    "else": {
                      "$if": "tasks_for == \"action\"",
                      "else": [
                        "assume:repo:${repoUrl[8:]}:cron:${cron.job_name}"
                      ],
                      "then": [
                        "${action.repo_scope}"
                      ]
                    },
                    "then": [
                      "assume:repo:${repoUrl[8:]}:release"
                    ]
                  },
                  "then": [
                    "assume:repo:github.com/${event.pull_request.base.repo.full_name}:pull-request"
                  ]
                },
                "then": [
                  "assume:repo:${repoUrl[8:]}:branch:${short_head_branch}"
                ]
              },
              "tags": {
                "$if": "tasks_for in [\"github-push\", \"github-pull-request\"]",
                "else": {
                  "$if": "tasks_for == \"action\"",
                  "else": {
                    "$if": "tasks_for == \"cron\"",
                    "then": {
                      "kind": "cron-task"
                    }
                  },
                  "then": {
                    "kind": "action-callback"
                  }
                },
                "then": {
                  "kind": "decision-task"
                }
              },
              "taskGroupId": {
                "$if": "tasks_for == \"action\"",
                "else": "${ownTaskId}",
                "then": "${action.taskGroupId}"
              },
              "workerType": "decision"
            }
          }
        }
      }
    }
  },
  "triggerSchema": {
    "additionalProperties": false,
    "description": "Information required to trigger this hook.  This is provided by the `hookPayload`\n        template in the `actions.json` file generated in-tree.",
    "properties": {
      "decision": {
        "additionalProperties": false,
        "description": "Information provided by the decision task; this is usually baked into\n            `actions.json`, although any value could be supplied in a direct call to\n            `hooks.triggerHook`.",
        "properties": {
          "action": {
            "additionalProperties": false,
            "description": "Information about the action to perform",
            "properties": {
              "cb_name": {
                "description": "name of the in-tree callback function",
                "type": "string"
              },
              "description": {
                "description": "action description",
                "type": "string"
              },
              "name": {
                "description": "action name",
                "type": "string"
              },
              "symbol": {
                "description": "treeherder symbol",
                "type": "string"
              },
              "taskGroupId": {
                "description": "taskGroupId of the decision task",
                "type": "string"
              },
              "title": {
                "description": "action title",
                "type": "string"
              }
            },
            "required": [
              "cb_name",
              "description",
              "name",
              "symbol",
              "taskGroupId",
              "title"
            ],
            "type": "object"
          },
          "parameters": {
            "additionalProperties": true,
            "description": "decision task parameters",
            "type": "object"
          },
          "push": {
            "additionalProperties": false,
            "description": "Information about the push that created the decision task",
            "properties": {
              "owner": {
                "description": "user who made the original push",
                "type": "string"
              },
              "pushlog_id": {
                "description": "Mercurial pushlog ID of the original push",
                "type": "string"
              },
              "revision": {
                "description": "revision of the original push",
                "type": "string"
              },
              "branch": {
                "description": "branch",
                "type": "string"
              }
            },
            "required": [
              "owner",
              "pushlog_id",
              "revision"
            ],
            "type": "object"
          },
          "repository": {
            "additionalProperties": false,
            "description": "Information about the repository where the push occurred",
            "properties": {
              "level": {
                "description": "repository SCM level",
                "type": "string"
              },
              "project": {
                "description": "repository project name (also known as \"alias\")",
                "type": "string"
              },
              "url": {
                "description": "repository URL (without trailing slash)",
                "pattern": "[^/]$",
                "type": "string"
              }
            },
            "required": [
              "level",
              "project",
              "url"
            ],
            "type": "object"
          }
        },
        "required": [
          "action",
          "push",
          "repository"
        ],
        "type": "object"
      },
      "user": {
        "additionalProperties": false,
        "description": "Information provided by the user or user interface",
        "properties": {
          "input": {
            "anyOf": [
              {
                "description": "user input for the task",
                "type": "object"
              },
              {
                "const": null,
                "description": "null when the action takes no input"
              }
            ]
          },
          "taskGroupId": {
            "description": "taskGroupId on which this task was activated",
            "type": "string"
          },
          "taskId": {
            "anyOf": [
              {
                "description": "taskId of the task on which this action was activated",
                "type": "string"
              },
              {
                "const": null,
                "description": "null when the action is activated for a taskGroup"
              }
            ]
          }
        },
        "required": [
          "input",
          "taskGroupId",
          "taskId"
        ],
        "type": "object"
      }
    },
    "required": [
      "decision",
      "user"
    ],
    "type": "object"
  }
}
